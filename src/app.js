const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const helmet = require('helmet');
const compression = require('compression');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware ะดะปั ะฑะตะทะพะฟะฐัะฝะพััะธ
app.use(helmet());
app.use(compression());
app.use(cors());

// ะะฐััะธะฝะณ JSON
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// ะะพะดะบะปััะตะฝะธะต ะบ MongoDB (ะตัะปะธ ะฟะตัะตะผะตะฝะฝะฐั ัััะฐะฝะพะฒะปะตะฝะฐ)
if (process.env.MONGODB_URI) {
    mongoose.connect(process.env.MONGODB_URI)
    .then(() => console.log('โ MongoDB ะฟะพะดะบะปััะตะฝะฐ'))
    .catch(err => console.log('โ MongoDB ะพัะธะฑะบะฐ:', err.message));
}

// ะกัะฐัะธัะตัะบะธะต ัะฐะนะปั
app.use(express.static('public'));

// ะัะฝะพะฒะฝัะต ะผะฐัััััั
app.get('/', (req, res) => {
    res.sendFile(__dirname + '/../public/index.html');
});

app.get('/api/status', (req, res) => {
    res.json({
        success: true,
        message: 'API ัะตัะฒะตั ัะฐะฑะพัะฐะตั',
        timestamp: new Date().toISOString()
    });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, '0.0.0.0', () => {
    console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
    console.log(`๐ Environment: ${process.env.NODE_ENV || 'development'}`);
});

module.exports = app;
