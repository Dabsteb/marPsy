{"version":3,"file":"main.f85ff731b69b8dc9cd6d.js","mappings":"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","sources":["webpack://psychology-cabinet-frontend/./src/index.js"],"sourcesContent":["// Импорт стилей\r\nimport './styles/global.css';\r\n\r\n// Современный JavaScript для психологического кабинета 2025\r\n\r\nclass PsychologyWebsite {\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        console.log('Психологический кабинет v2.0 загружен');\r\n        \r\n        this.initNavigation();\r\n        this.initScrollEffects();\r\n        this.initFormHandling();\r\n        this.initReviewForm();\r\n        this.initThemeToggle();\r\n        this.initSidebar();\r\n        this.initStarRating();\r\n        this.initQuiz();\r\n        this.initAnimations();\r\n        this.checkApiStatus();\r\n        \r\n        // Инициализация переменных\r\n        this.currentQuizStep = 1;\r\n        this.totalQuizSteps = 4;\r\n        \r\n        // Запускаем после загрузки DOM\r\n        if (document.readyState === 'loading') {\r\n            document.addEventListener('DOMContentLoaded', () => this.onDOMReady());\r\n        } else {\r\n            this.onDOMReady();\r\n        }\r\n    }\r\n\r\n    onDOMReady() {\r\n        this.addScrollListeners();\r\n        this.initIntersectionObserver();\r\n        this.addInteractivity();\r\n    }\r\n\r\n    // Навигация\r\n    initNavigation() {\r\n        const navbar = document.getElementById('navbar');\r\n        const navToggle = document.getElementById('nav-toggle');\r\n        const navMenu = document.getElementById('nav-menu');\r\n        const navLinks = document.querySelectorAll('.nav-link');\r\n\r\n        // Мобильное меню\r\n        if (navToggle && navMenu) {\r\n            navToggle.addEventListener('click', () => {\r\n                navMenu.classList.toggle('active');\r\n                this.toggleNavIcon(navToggle);\r\n            });\r\n        }\r\n\r\n        // Плавная прокрутка\r\n        navLinks.forEach(link => {\r\n            link.addEventListener('click', (e) => {\r\n                const href = link.getAttribute('href');\r\n                if (href && href.startsWith('#')) {\r\n                    e.preventDefault();\r\n                    this.smoothScrollTo(href.substring(1));\r\n                    \r\n                    // Закрыть мобильное меню\r\n                    if (navMenu) {\r\n                        navMenu.classList.remove('active');\r\n                        this.toggleNavIcon(navToggle, false);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // Скролл навбара\r\n        if (navbar) {\r\n            window.addEventListener('scroll', () => {\r\n                if (window.scrollY > 50) {\r\n                    navbar.classList.add('scrolled');\r\n                } else {\r\n                    navbar.classList.remove('scrolled');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleNavIcon(toggle, forceClose = null) {\r\n        if (!toggle) return;\r\n        \r\n        const spans = toggle.querySelectorAll('span');\r\n        const isOpen = forceClose !== null ? !forceClose : toggle.classList.contains('active');\r\n        \r\n        if (isOpen) {\r\n            toggle.classList.remove('active');\r\n            spans[0].style.transform = 'rotate(0deg) translateY(0px)';\r\n            spans[1].style.opacity = '1';\r\n            spans[2].style.transform = 'rotate(0deg) translateY(0px)';\r\n        } else {\r\n            toggle.classList.add('active');\r\n            spans[0].style.transform = 'rotate(45deg) translateY(7px)';\r\n            spans[1].style.opacity = '0';\r\n            spans[2].style.transform = 'rotate(-45deg) translateY(-7px)';\r\n        }\r\n    }\r\n\r\n    smoothScrollTo(targetId) {\r\n        const targetElement = document.getElementById(targetId);\r\n        if (targetElement) {\r\n            const offsetTop = targetElement.offsetTop - 80; // Учитываем высоту навбара\r\n            window.scrollTo({\r\n                top: offsetTop,\r\n                behavior: 'smooth'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Эффекты прокрутки\r\n    initScrollEffects() {\r\n        this.observerOptions = {\r\n            threshold: 0.1,\r\n            rootMargin: '0px 0px -50px 0px'\r\n        };\r\n    }\r\n\r\n    initIntersectionObserver() {\r\n        if (!window.IntersectionObserver) {\r\n            // Fallback для старых браузеров\r\n            document.querySelectorAll('.slide-up').forEach(el => {\r\n                el.classList.add('visible');\r\n            });\r\n            return;\r\n        }\r\n\r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add('visible');\r\n                    // Добавляем задержку для последовательной анимации\r\n                    const delay = entry.target.dataset.delay || 0;\r\n                    setTimeout(() => {\r\n                        entry.target.style.transitionDelay = `${delay}ms`;\r\n                    }, 100);\r\n                }\r\n            });\r\n        }, this.observerOptions);\r\n\r\n        // Наблюдаем за элементами\r\n        document.querySelectorAll('.slide-up, .service-card, .testimonial-card').forEach((el, index) => {\r\n            el.dataset.delay = index * 100; // Задержка для каждого элемента\r\n            observer.observe(el);\r\n        });\r\n    }\r\n\r\n    // Обработка формы\r\n    initFormHandling() {\r\n        const contactForm = document.getElementById('contact-form');\r\n        \r\n        if (contactForm) {\r\n            contactForm.addEventListener('submit', async (e) => {\r\n                e.preventDefault();\r\n                await this.handleFormSubmission(contactForm);\r\n            });\r\n        }\r\n\r\n        // Валидация в реальном времени\r\n        this.addRealTimeValidation();\r\n    }\r\n\r\n    async handleFormSubmission(form) {\r\n        const formData = new FormData(form);\r\n        const data = Object.fromEntries(formData.entries());\r\n        \r\n        console.log('Отправка формы:', data);\r\n        \r\n        // Показываем индикатор загрузки\r\n        const submitBtn = form.querySelector('button[type=\"submit\"]');\r\n        const originalText = submitBtn.innerHTML;\r\n        submitBtn.innerHTML = '<span><i class=\"fas fa-spinner fa-spin\"></i> Отправляем...</span>';\r\n        submitBtn.disabled = true;\r\n\r\n        try {\r\n            // Имитация отправки (заменить на реальный API)\r\n            const response = await this.submitToAPI(data);\r\n            \r\n            if (response.success) {\r\n                this.showNotification('<i class=\"fas fa-check-circle\"></i> Спасибо за заявку! Мы свяжемся с вами в ближайшее время.', 'success');\r\n                form.reset();\r\n                \r\n                // Отправляем в WhatsApp (опционально)\r\n                this.sendToWhatsApp(data);\r\n            } else {\r\n                throw new Error('Ошибка сервера');\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка отправки:', error);\r\n            this.showNotification('<i class=\"fas fa-times-circle\"></i> Произошла ошибка. Попробуйте связаться с нами по телефону.', 'error');\r\n        } finally {\r\n            submitBtn.innerHTML = originalText;\r\n            submitBtn.disabled = false;\r\n        }\r\n    }\r\n\r\n    async submitToAPI(data) {\r\n        // Реальный API запрос\r\n        const response = await fetch('/api/contact', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n            credentials: 'include'\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Ошибка сервера');\r\n        }\r\n\r\n        return response.json();\r\n    }\r\n\r\n    sendToWhatsApp(data) {\r\n        // Генерируем WhatsApp ссылку\r\n        const phone = '79197448522';\r\n        const message = `Заявка с сайта:\r\nИмя: ${data.name}\r\nТелефон: ${data.phone}\r\nУслуга: ${data.service}\r\n${data.email ? `Email: ${data.email}` : ''}\r\n${data.message ? `Сообщение: ${data.message}` : ''}`;\r\n        \r\n        const whatsappUrl = `https://wa.me/${phone}?text=${encodeURIComponent(message)}`;\r\n        \r\n        // Открываем WhatsApp через 2 секунды\r\n        setTimeout(() => {\r\n            window.open(whatsappUrl, '_blank');\r\n        }, 2000);\r\n    }\r\n\r\n    addRealTimeValidation() {\r\n        const form = document.getElementById('contact-form');\r\n        if (!form) return;\r\n\r\n        const fields = form.querySelectorAll('input[required], select[required], textarea[required]');\r\n        \r\n        fields.forEach(field => {\r\n            field.addEventListener('blur', () => {\r\n                this.validateField(field);\r\n            });\r\n            \r\n            field.addEventListener('input', () => {\r\n                // Убираем ошибку при вводе\r\n                if (field.classList.contains('error')) {\r\n                    field.classList.remove('error');\r\n                    const errorElement = field.parentNode.querySelector('.field-error');\r\n                    if (errorElement) {\r\n                        errorElement.remove();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    validateField(field) {\r\n        const value = field.value.trim();\r\n        let isValid = true;\r\n        let errorMessage = '';\r\n\r\n        // Убираем предыдущие ошибки\r\n        field.classList.remove('error');\r\n        const existingError = field.parentNode.querySelector('.field-error');\r\n        if (existingError) {\r\n            existingError.remove();\r\n        }\r\n\r\n        // Валидация в зависимости от типа поля\r\n        if (field.name === 'name' && value.length < 2) {\r\n            isValid = false;\r\n            errorMessage = 'Введите ваше имя';\r\n        } else if (field.name === 'phone') {\r\n            const phoneRegex = /^(\\+7|8)?[\\s\\-]?\\(?\\d{3}\\)?[\\s\\-]?\\d{3}[\\s\\-]?\\d{2}[\\s\\-]?\\d{2}$/;\r\n            if (!phoneRegex.test(value)) {\r\n                isValid = false;\r\n                errorMessage = 'Введите корректный номер телефона';\r\n            }\r\n        } else if (field.name === 'email' && value) {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(value)) {\r\n                isValid = false;\r\n                errorMessage = 'Введите корректный email';\r\n            }\r\n        } else if (field.name === 'service' && !value) {\r\n            isValid = false;\r\n            errorMessage = 'Выберите тип консультации';\r\n        }\r\n\r\n        if (!isValid) {\r\n            field.classList.add('error');\r\n            const errorElement = document.createElement('div');\r\n            errorElement.className = 'field-error';\r\n            errorElement.textContent = errorMessage;\r\n            errorElement.style.color = '#e53e3e';\r\n            errorElement.style.fontSize = '0.875rem';\r\n            errorElement.style.marginTop = '0.25rem';\r\n            field.parentNode.appendChild(errorElement);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    // Анимации и интерактивность\r\n    initAnimations() {\r\n        // Добавляем класс для анимаций после загрузки\r\n        setTimeout(() => {\r\n            document.body.classList.add('loaded');\r\n        }, 100);\r\n    }\r\n\r\n    addScrollListeners() {\r\n        let ticking = false;\r\n        \r\n        const handleScroll = () => {\r\n            if (!ticking) {\r\n                requestAnimationFrame(() => {\r\n                    this.updateScrollProgress();\r\n                    this.handleParallax();\r\n                    ticking = false;\r\n                });\r\n                ticking = true;\r\n            }\r\n        };\r\n        \r\n        window.addEventListener('scroll', handleScroll, { passive: true });\r\n    }\r\n\r\n    updateScrollProgress() {\r\n        const scrolled = window.pageYOffset;\r\n        const maxScroll = document.documentElement.scrollHeight - window.innerHeight;\r\n        const progress = (scrolled / maxScroll) * 100;\r\n        \r\n        // Можно добавить индикатор прогресса\r\n        const progressBar = document.querySelector('.scroll-progress');\r\n        if (progressBar) {\r\n            progressBar.style.width = `${progress}%`;\r\n        }\r\n    }\r\n\r\n    handleParallax() {\r\n        const scrolled = window.pageYOffset;\r\n        const parallaxElements = document.querySelectorAll('.floating-shapes');\r\n        \r\n        parallaxElements.forEach(element => {\r\n            const speed = 0.5;\r\n            element.style.transform = `translateY(${scrolled * speed}px)`;\r\n        });\r\n    }\r\n\r\n    addInteractivity() {\r\n        // Анимация кнопок при наведении\r\n        document.querySelectorAll('.btn').forEach(btn => {\r\n            btn.addEventListener('mouseenter', () => {\r\n                btn.style.transform = 'translateY(-3px)';\r\n            });\r\n            \r\n            btn.addEventListener('mouseleave', () => {\r\n                btn.style.transform = '';\r\n            });\r\n        });\r\n\r\n        // Анимация карточек услуг\r\n        document.querySelectorAll('.service-card').forEach(card => {\r\n            card.addEventListener('mouseenter', () => {\r\n                card.style.transform = 'translateY(-8px) rotateX(5deg)';\r\n            });\r\n            \r\n            card.addEventListener('mouseleave', () => {\r\n                card.style.transform = '';\r\n            });\r\n        });\r\n    }\r\n\r\n    // Проверка статуса API\r\n    async checkApiStatus() {\r\n        try {\r\n            const response = await fetch('/api/health');\r\n            const data = await response.json();\r\n            \r\n            if (data.success) {\r\n                console.log('API подключен:', data.message);\r\n                \r\n                // Показываем индикатор работы API\r\n                this.showApiStatus(true);\r\n            } else {\r\n                throw new Error('API недоступно');\r\n            }\r\n        } catch (error) {\r\n            console.warn('⚠️ API недоступно:', error.message);\r\n            this.showApiStatus(false);\r\n        }\r\n    }\r\n\r\n    showApiStatus(isConnected) {\r\n        // Создаем индикатор статуса API\r\n        const statusIndicator = document.createElement('div');\r\n        statusIndicator.id = 'api-status';\r\n        statusIndicator.style.cssText = `\r\n            position: fixed;\r\n            bottom: 20px;\r\n            right: 20px;\r\n            padding: 8px 12px;\r\n            border-radius: 20px;\r\n            font-size: 12px;\r\n            z-index: 1000;\r\n            transition: all 0.3s ease;\r\n            ${isConnected \r\n                ? 'background: #48bb78; color: white;' \r\n                : 'background: #f56565; color: white;'\r\n            }\r\n        `;\r\n        \r\n        statusIndicator.innerHTML = isConnected \r\n            ? '<i class=\"fas fa-check-circle\" style=\"color: green\"></i> Онлайн' \r\n            : '<i class=\"fas fa-times-circle\" style=\"color: red\"></i> Офлайн';\r\n        \r\n        // Удаляем предыдущий индикатор\r\n        const existing = document.getElementById('api-status');\r\n        if (existing) {\r\n            existing.remove();\r\n        }\r\n        \r\n        document.body.appendChild(statusIndicator);\r\n        \r\n        // Автоматически скрываем через 3 секунды\r\n        setTimeout(() => {\r\n            if (statusIndicator.parentNode) {\r\n                statusIndicator.style.opacity = '0';\r\n                setTimeout(() => {\r\n                    statusIndicator.remove();\r\n                }, 300);\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    // Система уведомлений\r\n    showNotification(message, type = 'success') {\r\n        // Удаляем существующие уведомления\r\n        document.querySelectorAll('.notification').forEach(n => n.remove());\r\n        \r\n        const notification = document.createElement('div');\r\n        notification.className = `notification ${type}`;\r\n        notification.innerHTML = `\r\n            <div class=\"notification-content\">\r\n                <span class=\"notification-message\">${message}</span>\r\n                <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\r\n            </div>\r\n        `;\r\n        \r\n        document.body.appendChild(notification);\r\n        \r\n        // Показываем уведомление\r\n        setTimeout(() => {\r\n            notification.classList.add('show');\r\n        }, 100);\r\n        \r\n        // Автоматически скрываем через 5 секунд\r\n        setTimeout(() => {\r\n            notification.classList.remove('show');\r\n            setTimeout(() => {\r\n                if (notification.parentNode) {\r\n                    notification.remove();\r\n                }\r\n            }, 300);\r\n        }, 5000);\r\n    }\r\n\r\n    // Утилиты\r\n    debounce(func, wait) {\r\n        let timeout;\r\n        return function executedFunction(...args) {\r\n            const later = () => {\r\n                clearTimeout(timeout);\r\n                func(...args);\r\n            };\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    throttle(func, limit) {\r\n        let inThrottle;\r\n        return function() {\r\n            const args = arguments;\r\n            const context = this;\r\n            if (!inThrottle) {\r\n                func.apply(context, args);\r\n                inThrottle = true;\r\n                setTimeout(() => inThrottle = false, limit);\r\n            }\r\n        };\r\n    }\r\n\r\n    // Переключатель темы\r\n    initThemeToggle() {\r\n        const themeToggle = document.getElementById('theme-toggle');\r\n        const themeIcon = document.getElementById('theme-icon');\r\n        \r\n        if (!themeToggle || !themeIcon) return;\r\n        \r\n        // Определяем начальную тему\r\n        const savedTheme = localStorage.getItem('theme');\r\n        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n        const initialTheme = savedTheme || (systemPrefersDark ? 'dark' : 'light');\r\n        \r\n        this.setTheme(initialTheme);\r\n        \r\n        themeToggle.addEventListener('click', () => {\r\n            const currentTheme = document.body.getAttribute('data-theme');\r\n            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\r\n            this.setTheme(newTheme);\r\n            localStorage.setItem('theme', newTheme);\r\n        });\r\n        \r\n        // Слушаем системные изменения темы\r\n        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\r\n            if (!localStorage.getItem('theme')) {\r\n                this.setTheme(e.matches ? 'dark' : 'light');\r\n            }\r\n        });\r\n    }\r\n    \r\n    setTheme(theme) {\r\n        document.body.setAttribute('data-theme', theme);\r\n        const themeIcon = document.getElementById('theme-icon');\r\n        if (themeIcon) {\r\n            themeIcon.className = theme === 'dark' ? 'fas fa-moon' : 'fas fa-sun';\r\n        }\r\n    }\r\n\r\n    // Боковое меню\r\n    initSidebar() {\r\n        const sidebarToggle = document.getElementById('sidebar-toggle');\r\n        const sidebar = document.getElementById('sidebar');\r\n        \r\n        if (!sidebarToggle || !sidebar) return;\r\n        \r\n        sidebarToggle.addEventListener('click', () => {\r\n            sidebar.classList.toggle('open');\r\n            sidebarToggle.classList.toggle('active');\r\n            \r\n            // Скрываем уведомления при открытии\r\n            if (sidebar.classList.contains('open')) {\r\n                const badge = document.getElementById('notification-badge');\r\n                if (badge) badge.style.display = 'none';\r\n            }\r\n        });\r\n        \r\n        // Закрыть при клике вне меню\r\n        document.addEventListener('click', (e) => {\r\n            if (!sidebar.contains(e.target) && !sidebarToggle.contains(e.target)) {\r\n                sidebar.classList.remove('open');\r\n                sidebarToggle.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Интерактивные звезды\r\n    initStarRating() {\r\n        const starRating = document.getElementById('review-rating');\r\n        if (!starRating) return;\r\n        \r\n        const stars = starRating.querySelectorAll('.star');\r\n        const ratingValue = document.getElementById('rating-value');\r\n        \r\n        let currentRating = 0;\r\n        \r\n        stars.forEach((star, index) => {\r\n            star.addEventListener('mouseenter', () => {\r\n                this.highlightStars(stars, index + 1);\r\n            });\r\n            \r\n            star.addEventListener('mouseleave', () => {\r\n                this.highlightStars(stars, currentRating);\r\n            });\r\n            \r\n            star.addEventListener('click', () => {\r\n                currentRating = index + 1;\r\n                ratingValue.value = currentRating;\r\n                this.highlightStars(stars, currentRating);\r\n            });\r\n        });\r\n    }\r\n    \r\n    highlightStars(stars, rating) {\r\n        stars.forEach((star, index) => {\r\n            if (index < rating) {\r\n                star.classList.add('active');\r\n            } else {\r\n                star.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Форма отзывов\r\n    initReviewForm() {\r\n        const reviewForm = document.getElementById('review-form');\r\n        const reviewCounter = document.getElementById('review-counter');\r\n        const reviewText = document.getElementById('review-text');\r\n        \r\n        if (reviewText && reviewCounter) {\r\n            reviewText.addEventListener('input', () => {\r\n                const length = reviewText.value.length;\r\n                reviewCounter.textContent = length;\r\n                \r\n                if (length > 1000) {\r\n                    reviewCounter.style.color = '#ff4757';\r\n                } else {\r\n                    reviewCounter.style.color = 'var(--text-secondary)';\r\n                }\r\n            });\r\n        }\r\n        \r\n        if (reviewForm) {\r\n            reviewForm.addEventListener('submit', async (e) => {\r\n                e.preventDefault();\r\n                await this.handleReviewSubmission(reviewForm);\r\n            });\r\n        }\r\n    }\r\n    \r\n    async handleReviewSubmission(form) {\r\n        const formData = new FormData(form);\r\n        const data = Object.fromEntries(formData.entries());\r\n        \r\n        // Проверяем оценку\r\n        if (data.rating === '0') {\r\n            this.showNotification('<i class=\"fas fa-star\"></i> Пожалуйста, поставьте оценку', 'error');\r\n            return;\r\n        }\r\n        \r\n        const submitBtn = form.querySelector('button[type=\"submit\"]');\r\n        const originalText = submitBtn.innerHTML;\r\n        submitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Отправляем...';\r\n        submitBtn.disabled = true;\r\n        \r\n        try {\r\n            // Имитация отправки отзыва\r\n            await new Promise(resolve => setTimeout(resolve, 1500));\r\n            \r\n            this.showNotification(\r\n                '<i class=\"fas fa-check-circle\"></i> Отзыв успешно отправлен! Он будет опубликован после модерации.',\r\n                'success'\r\n            );\r\n            \r\n            form.reset();\r\n            document.getElementById('rating-value').value = '0';\r\n            document.getElementById('review-counter').textContent = '0';\r\n            this.highlightStars(document.querySelectorAll('#review-rating .star'), 0);\r\n            \r\n        } catch (error) {\r\n            this.showNotification('<i class=\"fas fa-times-circle\"></i> Ошибка при отправке отзыва', 'error');\r\n        } finally {\r\n            submitBtn.innerHTML = originalText;\r\n            submitBtn.disabled = false;\r\n        }\r\n    }\r\n\r\n    // Анкета\r\n    initQuiz() {\r\n        const quizModal = document.getElementById('quiz-modal');\r\n        if (!quizModal) return;\r\n        \r\n        // Показываем анкету для новых пользователей\r\n        setTimeout(() => {\r\n            if (!localStorage.getItem('quiz-completed')) {\r\n                this.showQuizPrompt();\r\n            }\r\n        }, 5000);\r\n    }\r\n    \r\n    showQuizPrompt() {\r\n        const quizModal = document.getElementById('quiz-modal');\r\n        if (quizModal) {\r\n            quizModal.classList.add('active');\r\n        }\r\n    }\r\n    \r\n    nextQuizStep() {\r\n        if (this.currentQuizStep < this.totalQuizSteps) {\r\n            // Валидация текущего шага\r\n            if (!this.validateQuizStep(this.currentQuizStep)) {\r\n                return;\r\n            }\r\n            \r\n            // Скрываем текущий шаг\r\n            document.querySelector(`[data-step=\"${this.currentQuizStep}\"]`).style.display = 'none';\r\n            \r\n            this.currentQuizStep++;\r\n            \r\n            // Показываем следующий шаг\r\n            document.querySelector(`[data-step=\"${this.currentQuizStep}\"]`).style.display = 'block';\r\n            \r\n            // Обновляем кнопки\r\n            document.getElementById('quiz-prev').style.display = 'inline-flex';\r\n            \r\n            if (this.currentQuizStep === this.totalQuizSteps) {\r\n                document.getElementById('quiz-next').style.display = 'none';\r\n                document.getElementById('quiz-submit').style.display = 'inline-flex';\r\n            }\r\n        }\r\n    }\r\n    \r\n    prevQuizStep() {\r\n        if (this.currentQuizStep > 1) {\r\n            // Скрываем текущий шаг\r\n            document.querySelector(`[data-step=\"${this.currentQuizStep}\"]`).style.display = 'none';\r\n            \r\n            this.currentQuizStep--;\r\n            \r\n            // Показываем предыдущий шаг\r\n            document.querySelector(`[data-step=\"${this.currentQuizStep}\"]`).style.display = 'block';\r\n            \r\n            // Обновляем кнопки\r\n            if (this.currentQuizStep === 1) {\r\n                document.getElementById('quiz-prev').style.display = 'none';\r\n            }\r\n            \r\n            document.getElementById('quiz-next').style.display = 'inline-flex';\r\n            document.getElementById('quiz-submit').style.display = 'none';\r\n        }\r\n    }\r\n    \r\n    validateQuizStep(step) {\r\n        const stepElement = document.querySelector(`[data-step=\"${step}\"]`);\r\n        const requiredFields = stepElement.querySelectorAll('[required]');\r\n        \r\n        for (let field of requiredFields) {\r\n            if (field.type === 'radio' || field.type === 'checkbox') {\r\n                const name = field.name;\r\n                const checkedBoxes = stepElement.querySelectorAll(`[name=\"${name}\"]:checked`);\r\n                if (checkedBoxes.length === 0) {\r\n                    this.showNotification('<i class=\"fas fa-exclamation-circle\"></i> Пожалуйста, заполните все обязательные поля', 'error');\r\n                    return false;\r\n                }\r\n            } else if (!field.value.trim()) {\r\n                this.showNotification('<i class=\"fas fa-exclamation-circle\"></i> Пожалуйста, заполните все обязательные поля', 'error');\r\n                field.focus();\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    async submitQuiz() {\r\n        if (!this.validateQuizStep(this.currentQuizStep)) {\r\n            return;\r\n        }\r\n        \r\n        const form = document.getElementById('client-quiz');\r\n        const formData = new FormData(form);\r\n        const data = Object.fromEntries(formData.entries());\r\n        \r\n        try {\r\n            // Имитация отправки анкеты\r\n            await new Promise(resolve => setTimeout(resolve, 2000));\r\n            \r\n            this.showNotification(\r\n                '<i class=\"fas fa-check-circle\"></i> Анкета успешно отправлена! Мы свяжемся с вами в ближайшее время.',\r\n                'success'\r\n            );\r\n            \r\n            localStorage.setItem('quiz-completed', 'true');\r\n            this.closeQuiz();\r\n            \r\n        } catch (error) {\r\n            this.showNotification('<i class=\"fas fa-times-circle\"></i> Ошибка при отправке анкеты', 'error');\r\n        }\r\n    }\r\n    \r\n    closeQuiz() {\r\n        const quizModal = document.getElementById('quiz-modal');\r\n        if (quizModal) {\r\n            quizModal.classList.remove('active');\r\n        }\r\n    }\r\n    \r\n    startQuiz() {\r\n        this.currentQuizStep = 1;\r\n        // Сброс формы\r\n        document.getElementById('client-quiz').reset();\r\n        // Показываем первый шаг\r\n        document.querySelectorAll('.quiz-step').forEach((step, index) => {\r\n            step.style.display = index === 0 ? 'block' : 'none';\r\n        });\r\n        // Сброс кнопок\r\n        document.getElementById('quiz-prev').style.display = 'none';\r\n        document.getElementById('quiz-next').style.display = 'inline-flex';\r\n        document.getElementById('quiz-submit').style.display = 'none';\r\n        \r\n        this.showQuizPrompt();\r\n    }\r\n    \r\n    closeSidebar() {\r\n        const sidebar = document.getElementById('sidebar');\r\n        const sidebarToggle = document.getElementById('sidebar-toggle');\r\n        if (sidebar) sidebar.classList.remove('open');\r\n        if (sidebarToggle) sidebarToggle.classList.remove('active');\r\n    }\r\n}\r\n\r\n// Глобальные функции для HTML\r\nwindow.startQuiz = function() {\r\n    if (window.website) {\r\n        window.website.startQuiz();\r\n    }\r\n};\r\n\r\nwindow.closeQuiz = function() {\r\n    if (window.website) {\r\n        window.website.closeQuiz();\r\n    }\r\n};\r\n\r\nwindow.nextQuizStep = function() {\r\n    if (window.website) {\r\n        window.website.nextQuizStep();\r\n    }\r\n};\r\n\r\nwindow.prevQuizStep = function() {\r\n    if (window.website) {\r\n        window.website.prevQuizStep();\r\n    }\r\n};\r\n\r\nwindow.closeSidebar = function() {\r\n    if (window.website) {\r\n        window.website.closeSidebar();\r\n    }\r\n};\r\n\r\n// Инициализация\r\nconst website = new PsychologyWebsite();\r\nwindow.website = website;\r\n\r\n// Экспорт для использования в других модулях\r\nexport default website;\r\n\r\nconsole.log('Современный психологический кабинет готов к работе!'); "],"names":["window","startQuiz","website","closeQuiz","nextQuizStep","prevQuizStep","closeSidebar","constructor","this","init","console","log","initNavigation","initScrollEffects","initFormHandling","initReviewForm","initThemeToggle","initSidebar","initStarRating","initQuiz","initAnimations","checkApiStatus","currentQuizStep","totalQuizSteps","document","readyState","addEventListener","onDOMReady","addScrollListeners","initIntersectionObserver","addInteractivity","navbar","getElementById","navToggle","navMenu","navLinks","querySelectorAll","classList","toggle","toggleNavIcon","forEach","link","e","href","getAttribute","startsWith","preventDefault","smoothScrollTo","substring","remove","scrollY","add","forceClose","spans","contains","style","transform","opacity","targetId","targetElement","offsetTop","scrollTo","top","behavior","observerOptions","threshold","rootMargin","IntersectionObserver","el","observer","entries","entry","isIntersecting","target","delay","dataset","setTimeout","transitionDelay","index","observe","contactForm","async","handleFormSubmission","addRealTimeValidation","form","formData","FormData","data","Object","fromEntries","submitBtn","querySelector","originalText","innerHTML","disabled","submitToAPI","success","Error","showNotification","reset","sendToWhatsApp","error","response","fetch","method","headers","body","JSON","stringify","credentials","ok","errorData","json","message","name","phone","service","email","whatsappUrl","encodeURIComponent","open","field","validateField","errorElement","parentNode","value","trim","isValid","errorMessage","existingError","length","test","createElement","className","textContent","color","fontSize","marginTop","appendChild","ticking","requestAnimationFrame","updateScrollProgress","handleParallax","passive","progress","pageYOffset","documentElement","scrollHeight","innerHeight","progressBar","width","scrolled","element","btn","card","showApiStatus","warn","isConnected","statusIndicator","id","cssText","existing","type","n","notification","debounce","func","wait","timeout","args","clearTimeout","throttle","limit","inThrottle","arguments","apply","themeToggle","themeIcon","savedTheme","localStorage","getItem","systemPrefersDark","matchMedia","matches","initialTheme","setTheme","newTheme","setItem","theme","setAttribute","sidebarToggle","sidebar","badge","display","starRating","stars","ratingValue","currentRating","star","highlightStars","rating","reviewForm","reviewCounter","reviewText","handleReviewSubmission","Promise","resolve","showQuizPrompt","quizModal","validateQuizStep","step","stepElement","requiredFields","focus","submitQuiz"],"sourceRoot":""}